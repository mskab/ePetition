name: Generate FastAPI OpenAPI specification
on: 
  push
env:
  POSTGRES_SERVER: localhost
  SSL_MODE: prefer
  SECRET_KEY: SECRET_KEY
  REFRESH_SECRET_KEY: REFRESH_SECRET_KEY
  POSTGRES_PORT: 5432
jobs:
  generate-specification:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checks out repo
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.10.0

      - name: Install pipenv
        uses: dschep/install-pipenv-action@v1

      - name: Generate OpenAPI file
        run: |
          pipenv install --dev pyyaml
          pipenv run python scripts/generate_openapi.py

      - name: Generate unique change name
        run: |
          UNIQUE_CHANGE_NAME=$(date +%F_%H-%M-%S)
          echo "UNIQUE_CHANGE_NAME=`update_api_specification_${UNIQUE_CHANGE_NAME}`" >> $GITHUB_ENV

      - name: Commit changes in remote repo
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: ${{ env.UNIQUE_CHANGE_NAME }}
          branch: ${{ env.UNIQUE_CHANGE_NAME }}
          repository: https://github.com/mskab/ePetition-docs
          file_pattern: "openapi.yml"
          create_branch: true

      - name: Open PR in remote repo
        uses: vsoch/pull-request-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PULL_REQUEST_REPOSITORY: https://github.com/mskab/ePetition-docs
          PULL_REQUEST_TOKEN: ${{ secrets.PAT }}
          PULL_REQUEST_BRANCH: main
          PULL_REQUEST_FROM_BRANCH: ${{env.UNIQUE_CHANGE_NAME}}
          PULL_REQUEST_TITLE: Update API docs
